name: Run Changed Scripts and Update Data

on:
  push:
    paths:
      - 'code/**'

permissions:
  contents: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      has-changes: ${{ steps.cf.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: tj-actions/changed-files@v45
        id: cf
        with:
          files: |
            code/*.R
            code/**/*.R
          json: true
          escape_json: false
      
      - id: set-matrix
        run: |
          if [[ '${{ steps.cf.outputs.all_changed_files }}' == '[]' ]]; then
            echo "matrix={\"script\":[]}" >> $GITHUB_OUTPUT
          else
            # Create proper matrix structure
            scripts=$(echo '${{ steps.cf.outputs.all_changed_files }}' | jq -r '.[]' | jq -R . | jq -s '{script: .}')
            echo "matrix=${scripts}" >> $GITHUB_OUTPUT
          fi

  run-scripts:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: large-runner
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Git LFS
        run: |
          git lfs install
          # Configure LFS to track files in data/ directory
          git lfs track "data/**"
          git add .gitattributes

      - uses: r-lib/actions/setup-r@v2

      - run: | 
          mkdir -p tmp

      - name: Install OS libs for sf
        if: matrix.script == 'code/geography.R'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libudunits2-dev \
            libgdal-dev \
            libgeos-dev \
            libproj-dev

      - uses: r-lib/actions/setup-renv@v2

      - name: Run R script
        run: |
          echo "Running ${{ matrix.script }}"
          Rscript --verbose "${{ matrix.script }}"

      - name: Check for new data files and commit to LFS
        run: |
          # Add any new files in data/ to git (will be tracked by LFS due to .gitattributes)
          if [ -n "$(git status --porcelain data/)" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add data/
            git add .gitattributes
            git commit -m "Add new data files from ${{ matrix.script }} via LFS [skip ci]" || echo "No changes to commit"
            git push
          fi