name: Run Changed Scripts and Create Release

on:
  push:
    paths:
      - 'scripts/**'

jobs:
  run-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Create outputs/ directory
        run: mkdir -p outputs

      - name: Get changed R scripts
        id: changed
        run: |
          FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^scripts/' | grep '\.R$' || true)
          echo "Changed files:"
          echo "$FILES"
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run changed R scripts
        if: steps.changed.outputs.files != ''
        run: |
          mkdir outputs
          echo "${{ steps.changed.outputs.files }}" | while read file; do
            echo "Running $file"
            Rscript "$file"
          done

      - name: List .feather files
        run: ls -lh outputs/*.feather || echo "No .feather files found"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: auto-${{ github.sha }}
          release_name: "Auto release ${{ github.sha }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload all .feather files to release using curl
        if: steps.changed.outputs.files != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
        run: |
          for file in outputs/*.feather; do
            if [[ -f "$file" ]]; then
              echo "Uploading $file"
              curl -sSL \
                -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Content-Type: application/octet-stream" \
                --data-binary @"$file" \
                "${UPLOAD_URL}?name=$(basename "$file")"
            else
              echo "No .feather file to upload for $file"
            fi
          done
